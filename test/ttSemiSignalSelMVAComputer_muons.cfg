process Test = 
{
# configuer MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"
  //service = MessageLogger {untracked vstring categories = { "Test" }}

 # input file(s)
  source = PoolSource {
    untracked vstring fileNames = {
      "file: USE A CSA07 CHowder SAMPLE"
    }
  }
  untracked PSet maxEvents = {untracked int32 input = -1}

  module csa07EventWeightProducer = CSA07EventWeightProducer {
    InputTag src = source
    untracked bool talkToMe = false // verbosity
    double overallLumi = 1. // overall lumi normalization (in pb-1)
    double ttKfactor = 1. 
  }

  ## std sequence for ttGenEvent
  include "TopQuarkAnalysis/TopEventProducers/data/TtGenEvtProducer.cff"

## configure ttDecaySelection
 # include "TopQuarkAnalysis/TopEventProducers/data/TtSemiNumLeptonFilter.cff"

## configure mva trainer
  include "TopQuarkAnalysis/TopEventSelection/data/TtSemiLepSignalSelMVAComputer_Muons.cff"

  
  path p1 = {
             csa07EventWeightProducer,
             tqafLayer1,
             makeGenEvt,
             findTtSemiLepSignalSelMVA
            }

  # define the event content
  block myEventContent = {
    untracked vstring outputCommands = {
      "drop *"
      ,"keep double_*_DiscSel_*"
    }
  }
  
  # the actual output module
  module out = PoolOutputModule {
    untracked string fileName = "Lkh_output"
    using myEventContent
    untracked bool verbose = false
  }

  endpath outpath = { out }
}
