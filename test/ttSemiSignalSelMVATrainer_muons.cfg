process Test = 
{
# configuer MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"
  //service = MessageLogger {untracked vstring categories = { "Test" }}

# input file(s)
  source = PoolSource {
    untracked vstring fileNames = {
      "file:USE A CSA07 CHOWDER SAMPLE!"
    }
  }
  untracked PSet maxEvents = {untracked int32 input = -1}

#-------------------------------------------------
# tqaf configuration
#-------------------------------------------------

module csa07EventWeightProducer = CSA07EventWeightProducer {
    InputTag src = source
    untracked bool talkToMe = false // verbosity
    double overallLumi = 1. // overall lumi normalization (in pb-1)
    double ttKfactor = 1. 
  }


# to produce TQAF Layer 1 if not already 
# place uncomment the following two lines
  include "TopQuarkAnalysis/TopObjectProducers/data/TQAFLayer1.cff"

## std sequence for ttGenEvent
  include "TopQuarkAnalysis/TopEventProducers/data/TtGenEvtProducer.cff"

## configure mva trainer
  include "TopQuarkAnalysis/TopEventSelection/data/TtSemiLepSignalSelMVATrainer_Muons.cff"

## make trainer looper known to the process
looper = TtSemiLepSignalSelMVATrainerLooper {
    VPSet trainers = {
      {
        string calibrationRecord = "ttSemiLepSignalSelMVA"
        untracked string trainDescription = "TopQuarkAnalysis/TopEventSelection/data/TtSemiLepSignalSelMVATrainer_Muons.xml"
        untracked bool loadState = false
        untracked bool saveState = true
        untracked bool monitoring= true
      }
    }
  }

#-------------------------------------------------
# process paths;
#-------------------------------------------------

path p1 = {
           csa07EventWeightProducer,
           tqafLayer1,
           makeGenEvt,
           makeMVATraining
          }
}
